{"version":3,"sources":["images/background.jpg","components/ui/Header.js","breakpoints.js","components/characters/CharacterItem.js","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["module","exports","MainHeader","styled","header","Img","img","Header","className","src","alt","breakpoints","xs","sm","md","lg","xl","breakpoint","createBreakpoint","createMap","CardFront","div","CardBack","props","isOdd","CardInner","Card","CardImg","CardBackTitle","h1","CardBackDescription","DescriptionItem","p","CardBackStatus","CharacterItem","item","nickname","status","name","portrayed","birthday","Bounce","keyframes","Spin","Bullet","span","Spinner","Cards","CharacterGrid","isLoading","items","map","i","key","char_id","Boolean","SearchBar","section","Input","input","Form","form","CloseIcon","isActive","Search","getQuery","useState","text","setText","setIsActive","type","placeholder","value","onChange","e","q","target","autoFocus","onClick","icon","faTimes","Main","bg","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ad5d3dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.84d3c4b0.jpg\";","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst MainHeader = styled.header`\n    margin-bottom: 50px;\n`;\n\nconst Img = styled.img`\n    width: 200px;\n    margin: 0 auto;\n    display: block;\n`;\n\nconst Header = () => {\n    return (\n        <MainHeader className=\"header\">\n            <Img src=\"https://images.amcnetworks.com/amc.com/wp-content/uploads/2010/12/logo_bb_stacked-C.png\" alt=\"\" />\n        </MainHeader>\n    );\n};\n\nexport default Header;","import {createBreakpoint, createMap} from 'styled-components-breakpoint';\n\nconst breakpoints = {\n    xs: 0,\n    sm: 320,\n    md: 768,\n    lg: 1200,\n    xl: 1600\n};\n\nconst breakpoint = createBreakpoint(breakpoints);\nconst map = createMap(breakpoints);\n\nexport { breakpoint };\nexport { map };","import React from 'react';\nimport styled from 'styled-components';\nimport { breakpoint, map } from './../../breakpoints';\n\nconst CardWidth = 320;\nconst CardHeight = 380;\n\nconst CardFront = styled.div`\n    width: 100%;\n    backface-visibility: hidden;\n    position: absolute;\n    transition: transform .6s;\n`;\n\nconst CardBack = styled.div`\n    padding: 20px;\n    transform: rotateY(180deg);\n    backface-visibility: hidden;\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${props => (props.isOdd ? '#0a4a3d' : '#006534')};\n`;\n\nconst CardInner = styled.div`\n    position: relative;\n    transition: transform .5s;\n    transform-style: preserve-3d;\n    width: 100%;\n    height: 100%;\n`;\n\nconst Card = styled.div`\n    width: 100%;\n    height: ${CardHeight}px;\n    color: #fff;\n    font-family: 'Libre Franklin', sans-serif;\n    background-color: transparent;\n    perspective: 1000px;\n\n    &:hover {\n        ${CardInner} {\n            transform: rotateY(180deg);\n        }\n    }\n`;\n\nconst CardImg = styled.img`\n    width: 100%;\n    height: 100%;\n    min-height: ${CardHeight}px;\n    max-height: ${CardHeight}px;\n    display: block;\n    object-fit: cover;\n    object-position: 0 0;\n`;\n\nconst CardBackTitle = styled.h1`\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 20px;\n`;\n\nconst CardBackDescription = styled.div`\n    font-size: 12px;\n`;\n\nconst DescriptionItem = styled.p`\n    line-height: 1.5;\n`;\n\nconst CardBackStatus = styled.p`\n    font-size: 12px;\n    margin-bottom: 10px;\n    opacity: .5;\n`;\n\nconst CharacterItem = ({ item, isOdd }) => {\n    return(\n        <Card isOdd={isOdd} className=\"card\">\n            <CardInner className=\"card__inner\">\n                <CardFront className=\"card__front\">\n                    <CardImg src={item.img} alt={item.nickname} className=\"card__image\" />\n                </CardFront>\n                <CardBack isOdd={isOdd} className=\"card__back\">\n                    <CardBackStatus className=\"card__back__status\">{item.status}</CardBackStatus>\n                    <CardBackTitle className=\"card__back__title\">{item.name}</CardBackTitle>\n                    <CardBackDescription className=\"card__back__description\">\n                        <DescriptionItem className=\"description__item\">\n                            <span>Portrayed by:</span> {item.portrayed}\n                        </DescriptionItem>\n                        <DescriptionItem className=\"description__item\">\n                            <span>Nickname:</span> {item.nickname}\n                        </DescriptionItem>\n                        <DescriptionItem className=\"description__item\">\n                            <span>Birthday:</span> {item.birthday}\n                        </DescriptionItem>\n                    </CardBackDescription>\n                </CardBack>\n            </CardInner>\n        </Card>\n    );\n};\n\nexport default CharacterItem;","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nconst Bounce = keyframes`\n    0%, 75%, 100% {\n        transform: translateY(0px);\n    }\n\n    25% {\n        transform: translateY(-15px);\n    }\n`;\n\nconst Spin = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateY(-50% -50%);\n`;\n\nconst Bullet = styled.span`\n    display: block;\n    height: 6px;\n    width: 6px;\n    background: #c7a65a;\n    border-radius: 50%;\n    position: absolute;\n    top: 0;\n\n    &:nth-child(1) {\n        left: 15px;\n        animation: ${Bounce} 1s ease-in-out .4s infinite;\n    }\n\n    &:nth-child(2) {\n        animation: ${Bounce} 1s ease-in-out .2s infinite;\n    }\n\n    &:nth-child(3) {\n        left: -15px;\n        animation: ${Bounce} 1s ease-in-out infinite;\n    }\n`;\n\nconst Spinner = () => {\n    return (\n        <Spin className=\"spinner\">\n            <Bullet></Bullet>\n            <Bullet></Bullet>\n            <Bullet></Bullet>\n        </Spin>\n    );\n};\n\nexport default Spinner;","import React from 'react';\nimport CharacterItem from './CharacterItem';\nimport Spinner from './../ui/Spinner';\nimport styled from 'styled-components';\nimport { breakpoint, map } from './../../breakpoints';\n\nconst CardWidth = 320;\n\nconst Cards = styled.div`\n    display: grid;\n    grid-template-columns: repeat(1, ${CardWidth}px);\n    justify-content: center;\n\n    ${breakpoint('md')`\n        grid-template-columns: repeat(2, ${CardWidth}px);\n    `};\n\n    ${breakpoint('lg')`\n        grid-template-columns: repeat(3, ${CardWidth}px);\n    `};\n\n    ${breakpoint('xl')`\n        grid-template-columns: repeat(4, ${CardWidth}px);\n    `};\n`;\n\nconst CharacterGrid = ({ isLoading, items }) => {\n    return isLoading ? (\n        <Spinner />\n    ) : (\n        <Cards className=\"cards\">\n            {items.map((item, i) => (\n                <CharacterItem key={item.char_id} item={item} isOdd={Boolean(i%2)} />\n            ))}\n        </Cards>\n    );\n};\n\nexport default CharacterGrid;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { breakpoint, map } from './../../breakpoints';\n\nconst SearchBar = styled.section`\n    margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n    border: none;\n    border-bottom: 1px solid #c7a65a;\n    font-family: 'Libre Franklin', sans-serif;\n    padding: 10px 5px 7px;\n    color: #c7a65a;\n    background-color: transparent;\n    display: block;\n    font-weight: bold;\n    letter-spacing: .2px;\n    width: 100%;\n    font-size: 16px;\n\n    &::placeholder {\n        color: #c7a65a;\n    }\n\n    &:focus {\n        outline-style: thin;\n        outline-color: #c7a65a;\n    }\n\n    ${breakpoint('xl')`\n        font-size: 13px;\n    `};\n`;\n\nconst Form = styled.form`\n    position: relative;\n    width: 100%;\n    max-width: 320px;\n    margin: 0 auto;\n`;\n\nconst CloseIcon = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    color: #fff;\n    display: ${props => props.isActive ? 'block' : 'none'};\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst Search = ({ getQuery }) => {\n    const [text, setText] = useState('');\n\tconst [isActive, setIsActive] = useState(false);\n\n    const onChange = (q) => {\n        if (q === '') {\n            setIsActive(false);\n        } else {\n            setIsActive(true);\n        }\n\n        setText(q);\n        getQuery(q);\n    }\n\n    const onClickCloseIcon = () => {\n        setText('');\n        getQuery('');\n        setIsActive(false);\n    }\n\n    return (\n        <SearchBar className=\"search-bar\">\n            <Form className=\"form\">\n                <Input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"Search characters\"\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    autoFocus />\n                <CloseIcon className=\"close-icon\" onClick={() => onClickCloseIcon()} isActive={isActive}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </CloseIcon>\n            </Form>\n        </SearchBar>\n    );\n};\n\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/ui/Header';\nimport CharacterGrid from './components/characters/CharacterGrid';\nimport Search from './components/ui/Search';\nimport styled from 'styled-components';\nimport bg from './images/background.jpg';\n\nconst Main = styled.div`\n\tbackground-image: url(${bg});\n\tpadding: 50px 20px;\n\tmin-height: 100vh;\n`;\n\nconst App = () => {\n\tconst [items, setItems] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [query, setQuery] = useState('');\n\t\n\tuseEffect(() => {\n        // async before a function ensures it always returns a promise\n        const fetchItems = async() => {\n            // keyword await makes js wait until that promise settles and returns its result\n            const result = await axios(\n                `https://www.breakingbadapi.com/api/characters?name=${query}`\n            );\n\n\t\t\tsetItems(result.data);\n\t\t\tsetIsLoading(false);\n        }\n\n        fetchItems();\n\t}, [query]);\n\t// whenever query is changed, useEffect is fired\n\n\treturn (\n        <Main className=\"main\">\n            <Header />\n\t\t\t<Search getQuery={(q) => setQuery(q)} />\n\t\t\t<CharacterGrid isLoading={isLoading} items={items} />\n        </Main>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}